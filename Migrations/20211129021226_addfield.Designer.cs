// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MvcMovie.Migrations
{
    [DbContext(typeof(MvcMovieContext))]
    [Migration("20211129021226_addfield")]
    partial class addfield
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("MvcMovie.Models.A", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("A");

                    b.HasDiscriminator<string>("Discriminator").HasValue("A");
                });

            modelBuilder.Entity("MvcMovie.Models.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("MvcMovie.Models.Loaisanpham", b =>
                {
                    b.Property<string>("lspID")
                        .HasColumnType("TEXT");

                    b.Property<string>("tenloai")
                        .HasColumnType("TEXT");

                    b.HasKey("lspID");

                    b.ToTable("Loaisanpham");
                });

            modelBuilder.Entity("MvcMovie.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MvcMovie.Models.Person", b =>
                {
                    b.Property<string>("PersonID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.HasKey("PersonID");

                    b.ToTable("Person");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("MvcMovie.Models.Product", b =>
                {
                    b.Property<string>("ProductID")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryID")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("MvcMovie.Models.sanpham", b =>
                {
                    b.Property<string>("spID")
                        .HasColumnType("TEXT");

                    b.Property<string>("lspID")
                        .HasColumnType("TEXT");

                    b.Property<string>("tensp")
                        .HasColumnType("TEXT");

                    b.HasKey("spID");

                    b.HasIndex("lspID");

                    b.ToTable("sanpham");
                });

            modelBuilder.Entity("MvcMovie.Models.B", b =>
                {
                    b.HasBaseType("MvcMovie.Models.A");

                    b.Property<string>("address")
                        .HasColumnType("TEXT");

                    b.Property<string>("age")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("B");
                });

            modelBuilder.Entity("MvcMovie.Models.Student", b =>
                {
                    b.HasBaseType("MvcMovie.Models.Person");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("University")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("MvcMovie.Models.Movie", b =>
                {
                    b.HasOne("MvcMovie.Models.Movie", null)
                        .WithMany("Movies")
                        .HasForeignKey("MovieId");
                });

            modelBuilder.Entity("MvcMovie.Models.Product", b =>
                {
                    b.HasOne("MvcMovie.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MvcMovie.Models.sanpham", b =>
                {
                    b.HasOne("MvcMovie.Models.Loaisanpham", "LoaiSanpham")
                        .WithMany("sanpham")
                        .HasForeignKey("lspID");

                    b.Navigation("LoaiSanpham");
                });

            modelBuilder.Entity("MvcMovie.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MvcMovie.Models.Loaisanpham", b =>
                {
                    b.Navigation("sanpham");
                });

            modelBuilder.Entity("MvcMovie.Models.Movie", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
